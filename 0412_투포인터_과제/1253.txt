#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

//좋은 수인지 검사하는 함수(투 포인터)
bool isGood(vector<int> &num, int left, int right, int idx) {
    while (left < right) { //서로 다른 수일 때까지
        if (left == idx) { //왼쪽 검사
            left++; //다음 포인터
            continue;
        }
        if (right == idx) { //오른쪽 검사
            right--; //다음 포인터
            continue;
        }

        if (num[left] + num[right] == num[idx]) { //좋은수의 조건을 만족하면
            return true; //true 리턴
        }
        if (num[left] + num[right] > num[idx]) { //서로다른 두개의 수 합이 더 크다면
            right--; //제일 큰수 감소
        } else { //작다면
            left++; //제일 작은수 증가
        }
    }
    return false; //false 리턴
}

/**
 * [좋다]
 *
 * 1. 각 수마다 양 쪽 끝에서 포인터를 시작해서 좁혀오면서 어떤 '다른 두 수'가 현재 수를 만들 수 있는지 검사
 * 2. 포인터를 차례로 옮기며 검사하기 위해 미리 수를 오름차순 정렬함
 * 3. 현재 만드려는 수의 위치와 left, right 포인터 위치가 겹칠 경우 처리 주의
 */

int main() {
    int n, ans = 0; //입력하는 수의 개수, 좋은 수의 개수

    //입력
    cin >> n;
    vector<int> num(n, 0); //수의 개수 만큼 배열 생성
    for (int i = 0; i < n; i++) {// 개수만큼
        cin >> num[i];//수 입력
    }

    //연산
    sort(num.begin(), num.end());//오름차순 정렬
    for (int i = 0; i < n; i++) { //수하나하나
        if (isGood(num, 0, n - 1, i)) { //좋은 수인지 확인
            ans++; //좋은수 개수 +1
        }
    }

    //출력
    cout << ans;
    return 0;
}